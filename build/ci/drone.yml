kind: pipeline
name: default

steps:
  - name: test entrypoint generator
    image: golang:1.11
    environment:
      GO111MODULE: on
    commands:
      - make test

  - name: build entrypoint generator
    image: golang:1.11
    environment:
      GO111MODULE: on
    commands:
      - make build

  - name: generate entrypoint
    image: debian:stretch
    commands:
      - apt-get update
      - apt-get install -y ruby ruby-dev rubygems build-essential
      - gem install --no-ri --no-rdoc fpm
      - make generate-entrypoint

  - name: publish docker image on branch build
    image: plugins/docker
    settings:
      username: lodge93+drone
      dockerfile: build/Dockerfile
      repo: quay.io/lodge93/drone-fpm
      registry: quay.io
      password:
        from_secret: docker_password
      tags:
        - ${DRONE_COMMIT_BRANCH//\//-}-${DRONE_BUILD_NUMBER}
        - ${DRONE_COMMIT_SHA}
    when:
      branch:
        exclude:
          - master

  - name: publish docker image on master build
    image: plugins/docker
    settings:
      username: lodge93+drone
      dockerfile: build/Dockerfile
      repo: quay.io/lodge93/drone-fpm
      registry: quay.io
      password:
        from_secret: docker_password
      tags:
        - ${DRONE_COMMIT_BRANCH//\//-}-${DRONE_BUILD_NUMBER}
        - ${DRONE_COMMIT_SHA}
        - latest
    when:
      branch:
        include:
          - master

  - name: end to end test
    image: quay.io/lodge93/drone-fpm:${DRONE_COMMIT_SHA}
    settings:
      name: generate-entrypoint
      version: ${DRONE_COMMIT_SHA}
      input_type: dir
      output_type: deb
      package: out/generate-entrypoint-${DRONE_COMMIT_SHA}.deb
      deb_systemd: test/generate-entrypoint.service
      command_arguments: out/generate-entrypoint=/usr/local/bin/
